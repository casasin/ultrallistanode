var http = require('http');
var fs = require('fs');
var url = require('url');

const axios = require('axios');

const git = 'http://raw.githubusercontent.com/iiioxoiii/ultrallista/master/db.json';


axios.get(git)
  .then(response => {
    const jsonData = response.data;

	const currentDate = new Date();
	jsonData.concerts = jsonData.concerts.filter(concert => new Date(concert.dateTime) > currentDate);

	
    
    // AquÃ­ pots continuar amb el teu codi per processar les dades JSON
    // Ordenar, mostrar, etc.
    jsonData.concerts.sort((a, b) => new Date(a.dateTime) - new Date(b.dateTime));
    




    jsonData.concerts.forEach(concert => {
      console.log(`Nom: ${concert.nom}`);
      console.log(`Sala: ${concert.sala}`);
      console.log(`Dia: ${concert.dia}`);
      console.log(`diaText: ${concert.textdia}`);
      console.log(`Hora: ${concert.hora}`);
      console.log(`Data i hora: ${concert.dateTime}`);
      console.log("-----");
    });
  })
  .catch(error => {
    console.error('Hi ha hagut un error en obtenir les dades:', error);
  });










// Create a server
http.createServer( function (request, response) {  
   // Parse the request containing file name
   var pathname = url.parse(request.url).pathname;
   
   // Print the name of the file for which request is made.
   console.log("Request for " + pathname + " received.");
   
   // Read the requested file content from file system
   fs.readFile(pathname.substr(1), function (err, data) {
      if (err) {
         console.log(err);
         
         // HTTP Status: 404 : NOT FOUND
         // Content Type: text/plain
         response.writeHead(404, {'Content-Type': 'text/html'});
      } else {	
         //Page found	  
         // HTTP Status: 200 : OK
         // Content Type: text/plain
         response.writeHead(200, {'Content-Type': 'text/html'});	
         
         // Write the content of the file to response body
         response.write(data.toString());		
      }
      
      // Send the response body 
      response.end();
   });   
}).listen(8081);
